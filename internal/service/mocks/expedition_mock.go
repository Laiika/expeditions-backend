// Code generated by MockGen. DO NOT EDIT.
// Source: db_cp_6/internal/repo (interfaces: ExpeditionRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entity "db_cp_6/internal/entity"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockExpeditionRepo is a mock of ExpeditionRepo interface.
type MockExpeditionRepo struct {
	ctrl     *gomock.Controller
	recorder *MockExpeditionRepoMockRecorder
}

// MockExpeditionRepoMockRecorder is the mock recorder for MockExpeditionRepo.
type MockExpeditionRepoMockRecorder struct {
	mock *MockExpeditionRepo
}

// NewMockExpeditionRepo creates a new mock instance.
func NewMockExpeditionRepo(ctrl *gomock.Controller) *MockExpeditionRepo {
	mock := &MockExpeditionRepo{ctrl: ctrl}
	mock.recorder = &MockExpeditionRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExpeditionRepo) EXPECT() *MockExpeditionRepoMockRecorder {
	return m.recorder
}

// CreateExpedition mocks base method.
func (m *MockExpeditionRepo) CreateExpedition(arg0 context.Context, arg1 interface{}, arg2 *entity.Expedition) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateExpedition", arg0, arg1, arg2)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateExpedition indicates an expected call of CreateExpedition.
func (mr *MockExpeditionRepoMockRecorder) CreateExpedition(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateExpedition", reflect.TypeOf((*MockExpeditionRepo)(nil).CreateExpedition), arg0, arg1, arg2)
}

// DeleteExpedition mocks base method.
func (m *MockExpeditionRepo) DeleteExpedition(arg0 context.Context, arg1 interface{}, arg2 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteExpedition", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteExpedition indicates an expected call of DeleteExpedition.
func (mr *MockExpeditionRepoMockRecorder) DeleteExpedition(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteExpedition", reflect.TypeOf((*MockExpeditionRepo)(nil).DeleteExpedition), arg0, arg1, arg2)
}

// GetAllExpeditions mocks base method.
func (m *MockExpeditionRepo) GetAllExpeditions(arg0 context.Context, arg1 interface{}) (entity.Expeditions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllExpeditions", arg0, arg1)
	ret0, _ := ret[0].(entity.Expeditions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllExpeditions indicates an expected call of GetAllExpeditions.
func (mr *MockExpeditionRepoMockRecorder) GetAllExpeditions(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllExpeditions", reflect.TypeOf((*MockExpeditionRepo)(nil).GetAllExpeditions), arg0, arg1)
}

// GetLocationExpeditions mocks base method.
func (m *MockExpeditionRepo) GetLocationExpeditions(arg0 context.Context, arg1 interface{}, arg2 int) (entity.Expeditions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocationExpeditions", arg0, arg1, arg2)
	ret0, _ := ret[0].(entity.Expeditions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLocationExpeditions indicates an expected call of GetLocationExpeditions.
func (mr *MockExpeditionRepoMockRecorder) GetLocationExpeditions(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocationExpeditions", reflect.TypeOf((*MockExpeditionRepo)(nil).GetLocationExpeditions), arg0, arg1, arg2)
}

// UpdateExpeditionDates mocks base method.
func (m *MockExpeditionRepo) UpdateExpeditionDates(arg0 context.Context, arg1 interface{}, arg2 int, arg3, arg4 time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateExpeditionDates", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateExpeditionDates indicates an expected call of UpdateExpeditionDates.
func (mr *MockExpeditionRepoMockRecorder) UpdateExpeditionDates(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateExpeditionDates", reflect.TypeOf((*MockExpeditionRepo)(nil).UpdateExpeditionDates), arg0, arg1, arg2, arg3, arg4)
}
