// Code generated by MockGen. DO NOT EDIT.
// Source: db_cp_6/internal/repo (interfaces: EquipmentRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entity "db_cp_6/internal/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEquipmentRepo is a mock of EquipmentRepo interface.
type MockEquipmentRepo struct {
	ctrl     *gomock.Controller
	recorder *MockEquipmentRepoMockRecorder
}

// MockEquipmentRepoMockRecorder is the mock recorder for MockEquipmentRepo.
type MockEquipmentRepoMockRecorder struct {
	mock *MockEquipmentRepo
}

// NewMockEquipmentRepo creates a new mock instance.
func NewMockEquipmentRepo(ctrl *gomock.Controller) *MockEquipmentRepo {
	mock := &MockEquipmentRepo{ctrl: ctrl}
	mock.recorder = &MockEquipmentRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEquipmentRepo) EXPECT() *MockEquipmentRepoMockRecorder {
	return m.recorder
}

// CreateEquipment mocks base method.
func (m *MockEquipmentRepo) CreateEquipment(arg0 context.Context, arg1 interface{}, arg2 *entity.Equipment) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEquipment", arg0, arg1, arg2)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEquipment indicates an expected call of CreateEquipment.
func (mr *MockEquipmentRepoMockRecorder) CreateEquipment(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEquipment", reflect.TypeOf((*MockEquipmentRepo)(nil).CreateEquipment), arg0, arg1, arg2)
}

// DeleteEquipment mocks base method.
func (m *MockEquipmentRepo) DeleteEquipment(arg0 context.Context, arg1 interface{}, arg2 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEquipment", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteEquipment indicates an expected call of DeleteEquipment.
func (mr *MockEquipmentRepoMockRecorder) DeleteEquipment(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEquipment", reflect.TypeOf((*MockEquipmentRepo)(nil).DeleteEquipment), arg0, arg1, arg2)
}

// GetAllEquipments mocks base method.
func (m *MockEquipmentRepo) GetAllEquipments(arg0 context.Context, arg1 interface{}) (entity.Equipments, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllEquipments", arg0, arg1)
	ret0, _ := ret[0].(entity.Equipments)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllEquipments indicates an expected call of GetAllEquipments.
func (mr *MockEquipmentRepoMockRecorder) GetAllEquipments(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllEquipments", reflect.TypeOf((*MockEquipmentRepo)(nil).GetAllEquipments), arg0, arg1)
}

// GetExpeditionEquipments mocks base method.
func (m *MockEquipmentRepo) GetExpeditionEquipments(arg0 context.Context, arg1 interface{}, arg2 int) (entity.Equipments, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExpeditionEquipments", arg0, arg1, arg2)
	ret0, _ := ret[0].(entity.Equipments)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExpeditionEquipments indicates an expected call of GetExpeditionEquipments.
func (mr *MockEquipmentRepoMockRecorder) GetExpeditionEquipments(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExpeditionEquipments", reflect.TypeOf((*MockEquipmentRepo)(nil).GetExpeditionEquipments), arg0, arg1, arg2)
}
