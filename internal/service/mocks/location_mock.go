// Code generated by MockGen. DO NOT EDIT.
// Source: db_cp_6/internal/repo (interfaces: LocationRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entity "db_cp_6/internal/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLocationRepo is a mock of LocationRepo interface.
type MockLocationRepo struct {
	ctrl     *gomock.Controller
	recorder *MockLocationRepoMockRecorder
}

// MockLocationRepoMockRecorder is the mock recorder for MockLocationRepo.
type MockLocationRepoMockRecorder struct {
	mock *MockLocationRepo
}

// NewMockLocationRepo creates a new mock instance.
func NewMockLocationRepo(ctrl *gomock.Controller) *MockLocationRepo {
	mock := &MockLocationRepo{ctrl: ctrl}
	mock.recorder = &MockLocationRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocationRepo) EXPECT() *MockLocationRepoMockRecorder {
	return m.recorder
}

// CreateLocation mocks base method.
func (m *MockLocationRepo) CreateLocation(arg0 context.Context, arg1 interface{}, arg2 *entity.Location) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLocation", arg0, arg1, arg2)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLocation indicates an expected call of CreateLocation.
func (mr *MockLocationRepoMockRecorder) CreateLocation(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLocation", reflect.TypeOf((*MockLocationRepo)(nil).CreateLocation), arg0, arg1, arg2)
}

// DeleteLocation mocks base method.
func (m *MockLocationRepo) DeleteLocation(arg0 context.Context, arg1 interface{}, arg2 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLocation", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLocation indicates an expected call of DeleteLocation.
func (mr *MockLocationRepoMockRecorder) DeleteLocation(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLocation", reflect.TypeOf((*MockLocationRepo)(nil).DeleteLocation), arg0, arg1, arg2)
}

// GetAllLocations mocks base method.
func (m *MockLocationRepo) GetAllLocations(arg0 context.Context, arg1 interface{}) (entity.Locations, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllLocations", arg0, arg1)
	ret0, _ := ret[0].(entity.Locations)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllLocations indicates an expected call of GetAllLocations.
func (mr *MockLocationRepoMockRecorder) GetAllLocations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllLocations", reflect.TypeOf((*MockLocationRepo)(nil).GetAllLocations), arg0, arg1)
}
